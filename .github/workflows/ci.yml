name: Progressive GitHub Actions Class
on: [push, workflow_dispatch]

jobs:
  # ========================================
  # PHASE 1: NOVICE (Foundations)
  # ========================================
  phase1-hello-world:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
       UNCOMMENT THIS FOR PHASE 1
      - name: Hello World
        run: echo "Hello GitHub Actions from ${{ github.actor }}!"
      
      # UNCOMMENT THIS FOR PHASE 1
      - name: Show GitHub context
        run: |
           echo "Event: ${{ github.event_name }}"
           echo "Branch: ${{ github.ref }}"
           echo "Commit SHA: ${{ github.sha }}"

  # ========================================
  # PHASE 2: ADVANCED BEGINNER (Basic Automation)
  # ========================================
  #phase2-node-test:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
        
      # UNCOMMENT THIS FOR PHASE 2
  #    - name: Setup Node.js
  #      uses: actions/setup-node@v4
  #      with:
  #         node-version: '20'
      
      # UNCOMMENT THIS FOR PHASE 2
  #    - name: Install dependencies
  #      run: npm install
      
      # UNCOMMENT THIS FOR PHASE 2
  #    - name: Run tests
  #      run: npm test

  # ========================================
  # PHASE 3: COMPETENT (Real-World Workflows)
  # ========================================
  #phase3-matrix-secrets:
   # runs-on: ubuntu-latest
    # UNCOMMENT THIS FOR PHASE 3
    #strategy:
     # matrix:
      #   node-version: [18, 20, 21]
    #steps:
     # - name: Checkout code
      #  uses: actions/checkout@v4
        
      # UNCOMMENT THIS FOR PHASE 3
      #- name: Setup Node.js ${{ matrix.node-version }}
       # uses: actions/setup-node@v4
        #with:
         #  node-version: ${{ matrix.node-version }}
      
      # UNCOMMENT THIS FOR PHASE 3
      #- name: Install dependencies
       # run: npm install
      
      # UNCOMMENT THIS FOR PHASE 3
      #- name: Run tests
       # run: npm test
      
      # UNCOMMENT THIS FOR PHASE 3
      #- name: Upload coverage
      # run: mkdir coverage && echo "Coverage ${{ matrix.node-version }}" > coverage/coverage.txt
      
      # UNCOMMENT THIS FOR PHASE 3
      #- name: Upload artifact
       # uses: actions/upload-artifact@v4
        #with:
         # name: coverage-${{ matrix.#node-version }}
          #path: coverage/

  # ========================================
  # PHASE 4: PROFICIENT (Optimization)
  # ========================================
  #phase4-caching:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
        
      # UNCOMMENT THIS FOR PHASE 4
      # - name: Cache node modules
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      # UNCOMMENT THIS FOR PHASE 4
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'
      
      # UNCOMMENT THIS FOR PHASE 4
      # - name: Install dependencies
      #   run: npm install
      
      # UNCOMMENT THIS FOR PHASE 4
      # - name: Show cache hit
      #   run: echo "Cache hit status: ${{ steps.cache.outputs.cache-hit }}"

  # ========================================
  # PHASE 5: EXPERT (Advanced Integration)
  # ========================================
  #phase5-advanced:
  #  runs-on: ubuntu-latest
    # UNCOMMENT THIS FOR PHASE 5
    # environment: production
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
        
      # UNCOMMENT THIS FOR PHASE 5
      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.11'
      
      # UNCOMMENT THIS FOR PHASE 5
      # - name: Install dependencies
      #   run: |
      #     cd python-project
      #     pip install -r requirements.txt || true
      
      # UNCOMMENT THIS FOR PHASE 5
      # - name: Run Python tests
      #   run: |
      #     cd python-project
      #     python -m pytest
      
      # UNCOMMENT THIS FOR PHASE 5
      # - name: Deploy to staging
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     echo "Deploying to staging..."
      #     mkdir -p public
      #     cp -r python-project public/
      
      # UNCOMMENT THIS FOR PHASE 5
      # - name: Security scan
      #   run: |
      #     echo "Running security scan..."
      #     npm audit --audit-level moderate || true